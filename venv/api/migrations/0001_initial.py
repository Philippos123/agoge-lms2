# Generated by Django 4.2.16 on 2025-04-13 17:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_admin', models.BooleanField(default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('bransch_typ', models.CharField(choices=[('teknik', 'Teknik'), ('vård', 'Vård'), ('handel', 'Handel'), ('service', 'Service'), ('fordon', 'Fordon'), ('industri', 'Industri'), ('sälj', 'Sälj'), ('ekonomi', 'Ekonomi'), ('it', 'IT'), ('bygg', 'Bygg'), ('transport', 'Transport'), ('skola', 'Skola'), ('annat', 'Annat')], default='Okänd', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='CourseToBuy',
            fields=[
                ('scorm_file', models.FileField(blank=True, help_text='Ladda upp ett SCORM-paket (ZIP-fil, max 50MB)', null=True, upload_to='scorm_packages/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['zip'])])),
                ('scorm_unpacked_dir', models.CharField(blank=True, max_length=255, null=True)),
                ('scorm_identifier', models.CharField(blank=True, help_text='Unik identifierare för SCORM-paketet', max_length=255, null=True)),
                ('price', models.FloatField()),
                ('title', models.CharField(max_length=255)),
                ('bransch_typ', models.CharField(choices=[('teknik', 'Teknik'), ('vård', 'Vård'), ('handel', 'Handel'), ('service', 'Service'), ('fordon', 'Fordon'), ('industri', 'Industri'), ('sälj', 'Sälj'), ('ekonomi', 'Ekonomi'), ('it', 'IT'), ('bygg', 'Bygg'), ('transport', 'Transport'), ('skola', 'Skola'), ('annat', 'Annat')], default='Okänd', max_length=10)),
                ('description', models.TextField()),
                ('img', models.ImageField(blank=True, null=True, upload_to='course_images/')),
                ('time_to_complete', models.IntegerField()),
                ('language', models.CharField(choices=[('EN', 'English'), ('RU', 'Russian'), ('UA', 'Ukrainian'), ('SE', 'Swedish'), ('DE', 'German'), ('FR', 'French'), ('IT', 'Italian'), ('ES', 'Spanish')], default='EN', max_length=2)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_marketplace', models.BooleanField(default=True, help_text='Om kursen ska visas på marknadsplatsen eller inte')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_specific_courses', to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('code', models.CharField(max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LanguageOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50, unique=True, verbose_name='Språkkod')),
                ('label', models.CharField(max_length=100, verbose_name='Visningsnamn')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Pris (SEK)')),
            ],
            options={
                'verbose_name': 'Språkval',
                'verbose_name_plural': 'Språkval',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('languages', models.JSONField(default=list)),
                ('note', models.TextField(blank=True, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('invoice_sent', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.company')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.coursetobuy')),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_to_company', to='api.company')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_sent_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inbjudan',
                'verbose_name_plural': 'Inbjudningar',
            },
        ),
        migrations.CreateModel(
            name='CompanySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_color', models.CharField(default='#007bff', max_length=20)),
                ('text_color', models.CharField(default='#000000', max_length=20)),
                ('secondary_color', models.CharField(default='#6c757d', max_length=20)),
                ('background_color', models.CharField(default='#f5f5f5', max_length=20)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='api.company')),
            ],
            options={
                'verbose_name_plural': 'Company Settings',
            },
        ),
        migrations.CreateModel(
            name='CompanyDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='company_documents/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt', 'jpg', 'jpeg', 'png'])])),
                ('title', models.CharField(blank=True, help_text='Valfri titel för dokumentet', max_length=255, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='api.company')),
                ('user', models.ForeignKey(blank=True, help_text='Användaren som laddade upp dokumentet', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Company Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='api.company'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='UserScormStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_status', models.CharField(default='not attempted', max_length=20)),
                ('score', models.FloatField(blank=True, null=True)),
                ('total_time', models.CharField(blank=True, max_length=50, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('progress_data', models.JSONField(default=dict)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.coursetobuy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scorm_statuses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='ScormPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('EN', 'English'), ('RU', 'Russian'), ('UA', 'Ukrainian'), ('SE', 'Swedish'), ('DE', 'German'), ('FR', 'French'), ('IT', 'Italian'), ('ES', 'Spanish')], default='EN', help_text='Språkkod för detta SCORM-paket', max_length=2)),
                ('package_file', models.FileField(help_text='Ladda upp SCORM-paket (ZIP)', upload_to='scorm_packages/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['zip'])])),
                ('scorm_unpacked_dir', models.CharField(blank=True, max_length=255, null=True)),
                ('scorm_identifier', models.CharField(blank=True, help_text='Unik identifierare i SCORM-paketet', max_length=255, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scorm_packages', to='api.coursetobuy')),
            ],
            options={
                'unique_together': {('course', 'language')},
            },
        ),
        migrations.CreateModel(
            name='CompanyCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_ordered', models.BooleanField(default=False)),
                ('available_languages', models.JSONField(default=list, help_text='Lista med tillgängliga språkkoder för företaget för denna kurs')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_courses', to='api.company')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_courses', to='api.coursetobuy')),
            ],
            options={
                'unique_together': {('company', 'course')},
            },
        ),
    ]
